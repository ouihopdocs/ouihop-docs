{"Protocols/JSONOuiHopAPISerializable.html#/c:objc(pl)JSONOuiHopAPISerializable(im)fillFromOuiHopAPIJSONDictionary:":{"name":"-fillFromOuiHopAPIJSONDictionary:","abstract":"<p>A method to initialize a model from a JSON dictionary.</p>","parent_name":"JSONOuiHopAPISerializable"},"Protocols/JSONOuiHopAPISerializable.html#/c:objc(pl)JSONOuiHopAPISerializable(im)serializeToOuiHopAPIJSONDictionary:":{"name":"-serializeToOuiHopAPIJSONDictionary:","abstract":"<p>A method to serialize a model into JSON.</p>","parent_name":"JSONOuiHopAPISerializable"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didLoginWithOuiHopEmail:user:":{"name":"-didLoginWithOuiHopEmail:user:","abstract":"<p>Notifies observers about successful login with an email.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didFailToLoginWithOuiHopEmail:error:":{"name":"-didFailToLoginWithOuiHopEmail:error:","abstract":"<p>Notifies observers about failure to login with an email.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didLoginWithExternalId:user:":{"name":"-didLoginWithExternalId:user:","abstract":"<p>Notifies observers about successful login with an external Id.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didFailToLoginWithExternalId:error:":{"name":"-didFailToLoginWithExternalId:error:","abstract":"<p>Notifies observers about failure to login with an external Id.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didLoginWithMobileNumber:user:":{"name":"-didLoginWithMobileNumber:user:","abstract":"<p>Notifies observers about successful login with a mobile number.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didFailToLoginWithMobileNumber:error:":{"name":"-didFailToLoginWithMobileNumber:error:","abstract":"<p>Notifies observers about failure to login with a mobile number.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didGetLoggedInUserProfile:":{"name":"-didGetLoggedInUserProfile:","abstract":"<p>Notifies observers about getting user profile.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didFailToGetLoggedInUserProfileWithError:":{"name":"-didFailToGetLoggedInUserProfileWithError:","abstract":"<p>Notifies observers about failure to retrieve user profile.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didGetUserInfo:":{"name":"-didGetUserInfo:","abstract":"<p>Notifies observers about getting user information for a certain user.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didFailToGetUserInfoForId:error:":{"name":"-didFailToGetUserInfoForId:error:","abstract":"<p>Notifies observers about failure to retrieve user information for a certain user.</p>","parent_name":"UserInteractorObserver"},"Protocols/UserInteractorObserver.html#/c:objc(pl)UserInteractorObserver(im)didLogout":{"name":"-didLogout","abstract":"<p>Notifies observers about logging out.</p>","parent_name":"UserInteractorObserver"},"Protocols/SurroundingUsersInteractorObserver.html#/c:objc(pl)SurroundingUsersInteractorObserver(im)surroundingUsersInteractor:didUpdateSurroundingUsers:":{"name":"-surroundingUsersInteractor:didUpdateSurroundingUsers:","abstract":"<p>A delegate method that is called to observers by surrounding users interactor to notify them when a user was added to, updated, or deleted from list of surrounding users.</p>","parent_name":"SurroundingUsersInteractorObserver"},"Protocols/SurroundingTripsInteractorObserver.html#/c:objc(pl)SurroundingTripsInteractorObserver(im)didUpdateTrips:":{"name":"-didUpdateTrips:","abstract":"<p>Notifies observers with trips being added, updated, or deleted. Also, this method is called when a driver in a trip changes their location.</p>","parent_name":"SurroundingTripsInteractorObserver"},"Protocols/SurroundingTripsInteractorObserver.html#/c:objc(pl)SurroundingTripsInteractorObserver(im)didReceiveUnfilteredTrips:":{"name":"-didReceiveUnfilteredTrips:","abstract":"<p>Notifies observers with trips being newly added or updated, even if not matching filtration criteria. The purpose of this method is to allow higher layers to introduce different business requirements.</p>","parent_name":"SurroundingTripsInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didJoinTrip:withRequest:":{"name":"-didJoinTrip:withRequest:","abstract":"<p>Notifies observers that a join request was created for a trip.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didFailToJoinTrip:error:":{"name":"-didFailToJoinTrip:error:","abstract":"<p>Notifies observers that a join request failed to be created.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didBoardRequest:":{"name":"-didBoardRequest:","abstract":"<p>Notifies observers that a request has changed to a BOARDED state.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didFailToBoardRequest:error:":{"name":"-didFailToBoardRequest:error:","abstract":"<p>Notifies observers that a trip request failed to get boarded.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDropOffRequest:":{"name":"-didDropOffRequest:","abstract":"<p>Notifies observers that a pedestrian has dropped of the car for a request.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didFailToDropOffRequest:error:":{"name":"-didFailToDropOffRequest:error:","abstract":"<p>Notifies observers that a trip request failed to get dropped off.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didCancelRequest:":{"name":"-didCancelRequest:","abstract":"<p>Notifies observers that a request was successfully cancelled by pedestrian.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didFailToCancelRequest:error:":{"name":"-didFailToCancelRequest:error:","abstract":"<p>Notifies observers that a request has failed to be cancelled.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didCancelRequestWithDispute:":{"name":"-didCancelRequestWithDispute:","abstract":"<p>Notifies observers that a request was successfully cancelled by pedestrian with dispute of boarding.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didFailToCancelRequestWithDispute:error:":{"name":"-didFailToCancelRequestWithDispute:error:","abstract":"<p>Notifies observers that a request has failed to be cancelled with dispute.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverAcceptRequest:":{"name":"-didDriverAcceptRequest:","abstract":"<p>Notifies observers that a driver has accepted current pedestrian request.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverBoardRequest:":{"name":"-didDriverBoardRequest:","abstract":"<p>Notifies observers that a driver has boarded current pedestrian request.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverDropOffRequest:":{"name":"-didDriverDropOffRequest:","abstract":"<p>Notifies observers that a driver has dropped off current pedestrian request.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverRejectRequest:":{"name":"-didDriverRejectRequest:","abstract":"<p>Notifies observers that a driver has rejected current pedestrian request.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverCancelRequest:":{"name":"-didDriverCancelRequest:","abstract":"<p>Notifies observers that a driver has cancelled current pedestrian request after it was accepted.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didDriverCancelRequestWithDispute:":{"name":"-didDriverCancelRequestWithDispute:","abstract":"<p>Notifies observers that a driver has cancelled current pedestrian request with dispute.</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianTripRequestInteractorObserver.html#/c:objc(pl)PedestrianTripRequestInteractorObserver(im)didUpdateDriverLocation:":{"name":"-didUpdateDriverLocation:","abstract":"<p>A method called when driver&rsquo;s location changes</p>","parent_name":"PedestrianTripRequestInteractorObserver"},"Protocols/PedestrianDestinationRequestInteractorObserver.html#/c:objc(pl)PedestrianDestinationRequestInteractorObserver(im)didUpdatePedestrianDestinations:":{"name":"-didUpdatePedestrianDestinations:","abstract":"<p>Notifies observers with pedestrian destinations being added, updated, or deleted.</p>","parent_name":"PedestrianDestinationRequestInteractorObserver"},"Protocols/PedestrianDestinationInteractorObserver.html#/c:objc(pl)PedestrianDestinationInteractorObserver(im)didPublishPedestrianDestination:":{"name":"-didPublishPedestrianDestination:","abstract":"<p>A method called when a pedestrian destination is published successfully.</p>","parent_name":"PedestrianDestinationInteractorObserver"},"Protocols/PedestrianDestinationInteractorObserver.html#/c:objc(pl)PedestrianDestinationInteractorObserver(im)didCancelPedestrianDestination:":{"name":"-didCancelPedestrianDestination:","abstract":"<p>A method called when a pedestrian destination is cancelled successfully.</p>","parent_name":"PedestrianDestinationInteractorObserver"},"Protocols/PedestrianDestinationInteractorObserver.html#/c:objc(pl)PedestrianDestinationInteractorObserver(im)didFailToPublishPedestrianDestination:error:":{"name":"-didFailToPublishPedestrianDestination:error:","abstract":"<p>A method called when publishing a pedestrian destination fails.</p>","parent_name":"PedestrianDestinationInteractorObserver"},"Protocols/PedestrianDestinationInteractorObserver.html#/c:objc(pl)PedestrianDestinationInteractorObserver(im)didFailToCancelPedestrianDestination:error:":{"name":"-didFailToCancelPedestrianDestination:error:","abstract":"<p>A method called when cancelling a pedestrian destination fails.</p>","parent_name":"PedestrianDestinationInteractorObserver"},"Protocols/PartnerLocationInteractorObserver.html#/c:objc(pl)PartnerLocationInteractorObserver(im)didUpdatePartner:toLocation:":{"name":"-didUpdatePartner:toLocation:","abstract":"<p>A method called when a partner location changes</p>","parent_name":"PartnerLocationInteractorObserver"},"Protocols/LocationInteractorObserver.html#/c:objc(pl)LocationInteractorObserver(im)didUpdateToLocation:":{"name":"-didUpdateToLocation:","abstract":"<p>A method called for all location observers when location is updated. Location is considered updated if an accurate location is acquired and its different from last acquired location.</p>","parent_name":"LocationInteractorObserver"},"Protocols/LocationInteractorObserver.html#/c:objc(pl)LocationInteractorObserver(im)didUserMoveForDistance:":{"name":"-didUserMoveForDistance:","abstract":"<p>An optional method to notify observers with distance difference between last and current locations.</p>","parent_name":"LocationInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didUpdateActiveTripRequests:finishedTripRequests:":{"name":"-didUpdateActiveTripRequests:finishedTripRequests:","abstract":"<p>A callback method to notify observers about requests changes. It&rsquo;s the observer responsibility to identify which request had a change in status, and which has moved from active to finish requests.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didUpdatePartner:toLocation:":{"name":"-didUpdatePartner:toLocation:","abstract":"<p>A method called when a partner location changes</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToAcceptRequest:error:":{"name":"-didFailToAcceptRequest:error:","abstract":"<p>Notifies observers about failing to accept a request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToRejectRequest:error:":{"name":"-didFailToRejectRequest:error:","abstract":"<p>Notifies observers about failing to reject a request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToCancelRequest:error:":{"name":"-didFailToCancelRequest:error:","abstract":"<p>Notifies observers about failing to cancel a request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToBoardRequest:error:":{"name":"-didFailToBoardRequest:error:","abstract":"<p>Notifies observers about failing to board a request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToDropOffRequest:error:":{"name":"-didFailToDropOffRequest:error:","abstract":"<p>Notifies observers about failing to drop off a request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToCancelRequestWithDispute:error:":{"name":"-didFailToCancelRequestWithDispute:error:","abstract":"<p>Notifies observers about failing to cancel a request with dispute.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didGetPedestrianInfo:forRequest:":{"name":"-didGetPedestrianInfo:forRequest:","abstract":"<p>Notifies observers about getting pedestrian details for a certain request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripRequestsInteractorObserver.html#/c:objc(pl)DriverTripRequestsInteractorObserver(im)didFailToGetPedestrianInfoForId:forRequest:error:":{"name":"-didFailToGetPedestrianInfoForId:forRequest:error:","abstract":"<p>Notifies observers about failing to get pedestrian details for a certain request.</p>","parent_name":"DriverTripRequestsInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didStartTrip:":{"name":"-didStartTrip:","abstract":"<p>Notifies observers that a trip was successfully created.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didFailToStartTripWithError:":{"name":"-didFailToStartTripWithError:","abstract":"<p>Notifies observers that trip creation has failed.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didUpdateDistance:forTrip:":{"name":"-didUpdateDistance:forTrip:","abstract":"<p>Notifies observers about distance difference since last notification. Reported distance isn&rsquo;t cummulative.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didReportToServerKilometers:forTrip:":{"name":"-didReportToServerKilometers:forTrip:","abstract":"<p>Notifies observers about distance successfully reported to server.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didUpdateRouteForTrip:":{"name":"-didUpdateRouteForTrip:","abstract":"<p>Notifies observers that trip route was recalculated. Reasons could be different like a driver took a different route, or a new waypoint is added to the route.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didEndTrip:summary:reason:":{"name":"-didEndTrip:summary:reason:","abstract":"<p>Notifies observers when a trip is ended.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didFailToEndTrip:error:reason:":{"name":"-didFailToEndTrip:error:reason:","abstract":"<p>Notifies observers when a trip failed to end.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didConnectToWazeSDK":{"name":"-didConnectToWazeSDK","abstract":"<p>Notifies observers when successfully connected to Waze SDK.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didFailToConnectToWazeSDKWithError:":{"name":"-didFailToConnectToWazeSDKWithError:","abstract":"<p>Notifies observers when failing to connect to Waze SDK.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didTerminateConnectionToWazeSDK":{"name":"-didTerminateConnectionToWazeSDK","abstract":"<p>Notifies observers when terminating connection to Waze SDK.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html#/c:objc(pl)DriverTripInteractorObserver(im)didReturnToAppFromWazeApp":{"name":"-didReturnToAppFromWazeApp","abstract":"<p>Notifies observers when Waze application returns back to current app.</p>","parent_name":"DriverTripInteractorObserver"},"Protocols/DriverTripInteractorObserver.html":{"name":"DriverTripInteractorObserver","abstract":"<p>A protocol to get notified about different trip stages and actions.</p>"},"Protocols/DriverTripRequestsInteractorObserver.html":{"name":"DriverTripRequestsInteractorObserver","abstract":"<p>A protocol to receive notifications from driver trip requests interactor.</p>"},"Protocols/LocationInteractorObserver.html":{"name":"LocationInteractorObserver","abstract":"<p>A protocol that can be implemented by any object that is interested in location change events.</p>"},"Protocols/PartnerLocationInteractorObserver.html":{"name":"PartnerLocationInteractorObserver","abstract":"<p>A protocol to notify observers about partner location changes.</p>"},"Protocols/PedestrianDestinationInteractorObserver.html":{"name":"PedestrianDestinationInteractorObserver","abstract":"<p>A protocol to notify pedestrian destination interactor observers about pedestrian destination status changes.</p>"},"Protocols/PedestrianDestinationRequestInteractorObserver.html":{"name":"PedestrianDestinationRequestInteractorObserver","abstract":"<p>A protocol to notify pedestrian destination observers about changing pedestrian destinations.</p>"},"Protocols/PedestrianTripRequestInteractorObserver.html":{"name":"PedestrianTripRequestInteractorObserver","abstract":"<p>A protocol to notify observers for requests changes</p>"},"Protocols/SurroundingTripsInteractorObserver.html":{"name":"SurroundingTripsInteractorObserver","abstract":"<p>A protocol to notify surrounding trips observers about changing trips.</p>"},"Protocols/SurroundingUsersInteractorObserver.html":{"name":"SurroundingUsersInteractorObserver","abstract":"<p>A protocol that can be implemented to get notified when surrounding users get changed (added, updated, or deleted)</p>"},"Protocols/UserInteractorObserver.html":{"name":"UserInteractorObserver","abstract":"<p>A protocol to notify observers about different</p>"},"Protocols/JSONOuiHopAPISerializable.html":{"name":"JSONOuiHopAPISerializable","abstract":"<p>A protocol for serializing OuiHop objects to and from JSON</p>"},"Enums/TripFinishReason.html#/c:@E@TripFinishReason@TripFinishReasonManuallyCancelled":{"name":"TripFinishReasonManuallyCancelled","abstract":"<p>A trip is cancelled manually by driver.</p>","parent_name":"TripFinishReason"},"Enums/TripFinishReason.html#/c:@E@TripFinishReason@TripFinishReasonAutomaticallyArrived":{"name":"TripFinishReasonAutomaticallyArrived","abstract":"<p>A trip is automatically ended by SDK after arrival to destination.</p>","parent_name":"TripFinishReason"},"Enums/TripFinishReason.html#/c:@E@TripFinishReason@TripFinishReasonExpired":{"name":"TripFinishReasonExpired","abstract":"<p>A trip has expired and ended automatically by server.</p>","parent_name":"TripFinishReason"},"Enums/TripFinishReason.html":{"name":"TripFinishReason","abstract":"<p>An enum that states the different reasons for ending a trip.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateRequested":{"name":"kTripRequestStateRequested","abstract":"<p>Initial state for a trip request</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateRejected":{"name":"kTripRequestStateRejected","abstract":"<p>A state when a driver rejects the join request. This comes from a REQUESTED state.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateAccepted":{"name":"kTripRequestStateAccepted","abstract":"<p>A state when a driver accepts the join request. This comes from a REQUESTED state.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateBoarded":{"name":"kTripRequestStateBoarded","abstract":"<p>A state when a pedestrian boards in car with a driver. This comes from an ACCEPTED state.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateCanceled":{"name":"kTripRequestStateCanceled","abstract":"<p>A state when a pedestrian cancels the request at any stage before boarding.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateCanceledAfterAccepted":{"name":"kTripRequestStateCanceledAfterAccepted","abstract":"<p>A state when a driver cancels a request between ACCEPTED and BOARDED states.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateArrived":{"name":"kTripRequestStateArrived","abstract":"<p>A state when a pedestrian arrives to their destination.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateExpired":{"name":"kTripRequestStateExpired","abstract":"<p>A state when a request stays too long without an answer from a driver.</p>"},"Constants.html#/c:TripRequest.h@kTripRequestStateDisputed":{"name":"kTripRequestStateDisputed","abstract":"<p>A state when a request is cancelled by driver or pedestrian refusing other party&rsquo;s claim of boarding.</p>"},"Constants.html#/c:@OuiHopSDKVersionNumber":{"name":"OuiHopSDKVersionNumber","abstract":"<p>Project version number for OuiHopSDK.</p>"},"Constants.html#/c:@OuiHopSDKVersionString":{"name":"OuiHopSDKVersionString","abstract":"<p>Project version string for OuiHopSDK.</p>"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)ouihopBaseURLString":{"name":"+ouihopBaseURLString","abstract":"<p>Gets current backend URL.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)setOuihopBaseURLString:":{"name":"+setOuihopBaseURLString:","abstract":"<p>Sets backend base URL string.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)googleAPIKey":{"name":"+googleAPIKey","abstract":"<p>Gets Google key used for Google Places and Directions APIs.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)setGoogleAPIKey:":{"name":"+setGoogleAPIKey:","abstract":"<p>Sets Google key used for Google Places and Directions APIs.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)firestoreConfigurationFilePath":{"name":"+firestoreConfigurationFilePath","abstract":"<p>Gets Firestore configuration file path.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)setFirestoreConfigurationFilePath:":{"name":"+setFirestoreConfigurationFilePath:","abstract":"<p>Sets Firestore configuration file path. This file defines which Firestore instance to communicate with. This should be the path of a .plist file downloaded from Google Firebase Console.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)clientTokenString":{"name":"+clientTokenString","abstract":"<p>Gets client token used to distinguish different third party calls.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)setClientTokenString:":{"name":"+setClientTokenString:","abstract":"<p>Sets client token used to distinguish different third party calls.</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/OuiHopSDKConfiguration.html#/c:objc(cs)OuiHopSDKConfiguration(cm)configure":{"name":"+configure","abstract":"<p>Called to configure SDK with previously entered values for static properties of this class (base URL, Google key, etc&hellip;)</p>","parent_name":"OuiHopSDKConfiguration"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)carId":{"name":"carId","abstract":"<p>Id of driver&rsquo;s car on server.</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)brand":{"name":"brand","abstract":"<p>A string representing car brand (ex: BMW).</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)model":{"name":"model","abstract":"<p>A string representing car model (ex: Z8).</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)color":{"name":"color","abstract":"<p>A hexadecimal string representing car color (ex: FF0000).</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)plateNumber":{"name":"plateNumber","abstract":"<p>A string representing car license plate number (ex: H79L1K).</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)businessCar":{"name":"businessCar","abstract":"<p>A number holding a boolean representing if this is a business car, or owned directly by driver.</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)numberOfSeats":{"name":"numberOfSeats","abstract":"<p>The number of total available seats for a certain car. This is the default value for available seats created for a trip using this car, unless explicitly stated in the trip.</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)engineType":{"name":"engineType","abstract":"<p>A string representing engine type (ex: Electric).</p>","parent_name":"UserCar"},"Classes/UserCar.html#/c:objc(cs)UserCar(py)fiscalPower":{"name":"fiscalPower","abstract":"<p>A cooficient used for <q>puissance fiscale</q> French tax to identify taxable horsepower of a car.</p>","parent_name":"UserCar"},"Classes/User.html#/c:objc(cs)User(py)email":{"name":"email","abstract":"<p>Email address. This field is used as a unique identifier for OuiHop users.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)firstName":{"name":"firstName","abstract":"<p>First name field.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)lastName":{"name":"lastName","abstract":"<p>Last name field.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)password":{"name":"password","abstract":"<p>Password field. This shoud exceed 4 characters.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)mobileNo":{"name":"mobileNo","abstract":"<p>Mobile number. This field is used as a unique identifier for third party users.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)gender":{"name":"gender","abstract":"<p>Gender string. This could be either MALE or FEMALE values.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)birthDate":{"name":"birthDate","abstract":"<p>A string representing date of birth in the format yyyy-MM-dd.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)country":{"name":"country","abstract":"<p>A string representing user country. It could be either FR, CA, or a nil value representing other countries.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)mode":{"name":"mode","abstract":"<p>A string representing user mode. This could be either DRIVER or PEDESTRIAN.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)sponsorCode":{"name":"sponsorCode","abstract":"<p>Sponsor code field.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)accountType":{"name":"accountType","abstract":"<p>A string returned from server identifying account type. This could be: LOCAL, EXTRANAL, or THIRD_PARTY. LOCAL represents OuiHop users, EXTRANAL represents Facebook users, THIRD_PARTY represents third party users (users with quite limited features).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)newsLetterNumber":{"name":"newsLetterNumber","abstract":"<p>An NSNumber holding a boolean represents if a user registered to receive news letters.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)externalId":{"name":"externalId","abstract":"<p>This field is used as a unique identifier for Facebook users.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)accessToken":{"name":"accessToken","abstract":"<p>Facebook access token.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carMake":{"name":"carMake","abstract":"<p>A field that represents car brand (ex: Peugoet). This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carModel":{"name":"carModel","abstract":"<p>A field that represents car model (ex: 3008). This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carColor":{"name":"carColor","abstract":"<p>A field that represents car color in hex decimal format (FFFFFF). This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carPlateNumber":{"name":"carPlateNumber","abstract":"<p>A field that represents car plate number. This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)numberOfSeats":{"name":"numberOfSeats","abstract":"<p>A field that represents number of car seats. This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)businessCar":{"name":"businessCar","abstract":"<p>A boolean field enclosed in an NSNumber that represents if this is a business car. This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carEngineType":{"name":"carEngineType","abstract":"<p>A field that represents car engine type (ex: <q>electric</q>). This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)carFiscalPower":{"name":"carFiscalPower","abstract":"<p>A field that represents car fiscal power in France. This value is for internal server communication. It&rsquo;s better to use &lsquo;userCar&rsquo; property instead to read/write this value.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)userId":{"name":"userId","abstract":"<p>A number representing user Id.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)createdOn":{"name":"createdOn","abstract":"<p>Creation date as per server.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)lastUpdatedOn":{"name":"lastUpdatedOn","abstract":"<p>Update date as per server.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)hopizCriedit":{"name":"hopizCriedit","abstract":"<p>Hopiz (a virtual currency used by OuiHop users).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)photoChecksum":{"name":"photoChecksum","abstract":"<p>A string representing photo checksum.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)langCode":{"name":"langCode","abstract":"<p>Language code: FR or EN</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)currentTripID":{"name":"currentTripID","abstract":"<p>A field that holds current trip created by user. This value is used after login to recover an already-created trip.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)currentPedestrianJoinRequestIds":{"name":"currentPedestrianJoinRequestIds","abstract":"<p>A field that holds current trip join requests received for the currently-created trip. This value is used after login to recover lost requests for current trip.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)pedestrianDestinationId":{"name":"pedestrianDestinationId","abstract":"<p>A field that holds current pedestrian destination Id created by user. This value is used after login to recover an already-created pedestrian destination.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)userGroup":{"name":"userGroup","abstract":"<p>A group object used to link a user to a group.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)userLine":{"name":"userLine","abstract":"<p>Users lines are used for community networks (a feature currently isn&rsquo;t supported by SDK).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)userCar":{"name":"userCar","abstract":"<p>An object representing driver car. It holds different car fields.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)lastLocation":{"name":"lastLocation","abstract":"<p>Location object.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)favorites":{"name":"favorites","abstract":"<p>Favorites (a feature currently isn&rsquo;t supported by SDK).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)hwLines":{"name":"hwLines","abstract":"<p>Home to work lines (a feature currently isn&rsquo;t supported by SDK).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)whLines":{"name":"whLines","abstract":"<p>Work to home lines (a feature currently isn&rsquo;t supported by SDK).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)facebookPictureURL":{"name":"facebookPictureURL","abstract":"<p>Facebook picture URL</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)authToken":{"name":"authToken","abstract":"<p>Token used to authenticate user at server side.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)averageRank":{"name":"averageRank","abstract":"<p>Average rank for user. Rank is calculated as the average of previous reviews by other users.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)numberOfReviews":{"name":"numberOfReviews","abstract":"<p>Number of previous reviews for that user.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)numberOfLotteryTickets":{"name":"numberOfLotteryTickets","abstract":"<p>Number of lottery tickets (a feature currently isn&rsquo;t supported by SDK).</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)newsLetter":{"name":"newsLetter","abstract":"<p>A readonly property specifyies if a user has subscribed to receive news letters.</p>","parent_name":"User"},"Classes/User.html#/c:objc(cs)User(py)photoLocal":{"name":"photoLocal","abstract":"<p>Local UIImage representation of user photo.</p>","parent_name":"User"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)tripRequestId":{"name":"tripRequestId","abstract":"<p>Id of the request.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)trip":{"name":"trip","abstract":"<p>Driver&rsquo;s trip being requested to join.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)state":{"name":"state","abstract":"<p>State of the request.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)pedestrian":{"name":"pedestrian","abstract":"<p>A user representing pedestrian asking to join.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)lastUpdatedOn":{"name":"lastUpdatedOn","abstract":"<p>Timestamp for last time request was updated.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(py)createdOn":{"name":"createdOn","abstract":"<p>Timestamp for request creation.</p>","parent_name":"TripRequest"},"Classes/TripRequest.html#/c:objc(cs)TripRequest(cm)tripRequestFromOuihopAPIResponse:":{"name":"+tripRequestFromOuihopAPIResponse:","abstract":"<p>A static method to create a trip request from a JSON dictionary.</p>","parent_name":"TripRequest"},"Classes/BaseModel.html#/c:objc(cs)BaseModel(im)asJSONOuiHopAPIDictionary":{"name":"-asJSONOuiHopAPIDictionary","abstract":"<p>A method used to serialize a model object into JSON.</p>","parent_name":"BaseModel"},"Classes/OUIAddress.html#/c:objc(cs)OUIAddress(py)address":{"name":"address","abstract":"<p>A textual representation of the address, retrieved from reverse geocoding.</p>","parent_name":"OUIAddress"},"Classes/OUIAddress.html#/c:objc(cs)OUIAddress(py)zipcode":{"name":"zipcode","abstract":"<p>Zipcode retrieved from reverse geocoding.</p>","parent_name":"OUIAddress"},"Classes/OUIAddress.html#/c:objc(cs)OUIAddress(py)city":{"name":"city","abstract":"<p>City retrieved from reverse geocoding.</p>","parent_name":"OUIAddress"},"Classes/OUIAddress.html#/c:objc(cs)OUIAddress(py)coordinate":{"name":"coordinate","abstract":"<p>A geo-coordinate point</p>","parent_name":"OUIAddress"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)userId":{"name":"userId","abstract":"<p>User Id in the backend database.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)mode":{"name":"mode","abstract":"<p>A string of either <q>PEDESTRIAN</q> or <q>DRIVER</q> values to state the current mode of a user.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)pedestrianDestinationId":{"name":"pedestrianDestinationId","abstract":"<p>A variable holding current pedestrian destination Id if a user has created one as a pedestrian, or nil otherwise.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)tripId":{"name":"tripId","abstract":"<p>A variable holding current trip Id if a user has created one as a driver, or nil otherwise.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)locationDictionary":{"name":"locationDictionary","abstract":"<p>A JSON representation of Firestore location document.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)coordinate":{"name":"coordinate","abstract":"<p>A calculated geopoint extracted from locationDictionary.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)updatedOn":{"name":"updatedOn","abstract":"<p>Last date this user has updated their location</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)locationCL":{"name":"locationCL","abstract":"<p>A calculated CLLocation object extracted from locationDictionary.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)isDriver":{"name":"isDriver","abstract":"<p>A boolean property stating if this user is in driver mode. Typically, this property depends on <q>mode</q> property.</p>","parent_name":"FIRUser"},"Classes/FIRUser.html#/c:objc(cs)FIRUser(py)isPedestrian":{"name":"isPedestrian","abstract":"<p>A boolean property stating if this user is in pedestrian mode. Typically, this property depends on <q>mode</q> property.</p>","parent_name":"FIRUser"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)requestId":{"name":"requestId","abstract":"<p>Trip request Id in the backend database.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)createdOn":{"name":"createdOn","abstract":"<p>Date the trip request was created.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)lastUpdatedOn":{"name":"lastUpdatedOn","abstract":"<p>Date the trip request was last updated.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)status":{"name":"status","abstract":"<p>Status of a trip request. Expected values are: REQUESTED, ACCEPTED, REJECTED, CANCELED, CANCELED_AFTER_ACCEPTED, BOARDED, ARRIVED</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)pedestrianId":{"name":"pedestrianId","abstract":"<p>Id of the pedestrian who created this request</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)tripId":{"name":"tripId","abstract":"<p>Id of the trip being request</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)driverId":{"name":"driverId","abstract":"<p>Id of the trip driver</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)pickupCoordinate":{"name":"pickupCoordinate","abstract":"<p>A geo-coordinate point specifying where the driver should pick the pedestrian</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)boardingLocation":{"name":"boardingLocation","abstract":"<p>A geo-coordinate location specifying where the driver effectively picked the pedestrian. This location will be nil until request is changed to BOARDED.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)dropOffLocation":{"name":"dropOffLocation","abstract":"<p>A geo-coordinate location specifying where the driver dropped off the pedestrian. This location will be nil until request is changed to ARRIVED.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)rideSharingDuration":{"name":"rideSharingDuration","abstract":"<p>Duration of the ride sharing in minutes. This is the period between boarding and drop off. Before boarding, this duration is always zero.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(py)rideSharingDistance":{"name":"rideSharingDistance","abstract":"<p>Distance of the ride sharing in kilometers. This is the distance driven between boarding and drop off. Before boarding, this distance is always zero.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTripRequest.html#/c:objc(cs)FIRTripRequest(im)updateRequestUsingTripRequest:":{"name":"-updateRequestUsingTripRequest:","abstract":"<p>Updates a trip request with a more recent trip request object.</p>","parent_name":"FIRTripRequest"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)tripId":{"name":"tripId","abstract":"<p>Trip Id in the backend database.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)createdOn":{"name":"createdOn","abstract":"<p>Date the trip was created.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)lastUpdatedOn":{"name":"lastUpdatedOn","abstract":"<p>Date the trip was last updated.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)distance":{"name":"distance","abstract":"<p>Total distance of a trip, represented textually.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)distanceValue":{"name":"distanceValue","abstract":"<p>Total distance of a trip, in meters.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)duration":{"name":"duration","abstract":"<p>Total duration of a trip, represented textually.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)durationValue":{"name":"durationValue","abstract":"<p>Total duration of a trip, in minutes.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)status":{"name":"status","abstract":"<p>Status of a trip. Expected values are: ACTIVE, CANCELLED, ENDED</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)googlePolyline":{"name":"googlePolyline","abstract":"<p>An encoded polyline string retrieved from Google Directions API.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)wazePolyline":{"name":"wazePolyline","abstract":"<p>An encoded polyline string retrieved from Waze SDK.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)activeAfter":{"name":"activeAfter","abstract":"<p>Number of minutes when a trip starts, after its creation date.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)pedestrianDestinationId":{"name":"pedestrianDestinationId","abstract":"<p>If this trip was created to satisfy a particular pedestrian destination, its Id is stored here, else, its value is nil.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)startAddress":{"name":"startAddress","abstract":"<p>Start address full representation.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)endAddress":{"name":"endAddress","abstract":"<p>End address full representation.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)driver":{"name":"driver","abstract":"<p>Owner of the trip.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)driverId":{"name":"driverId","abstract":"<p>Driver Id of the trip.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)numberOfSeats":{"name":"numberOfSeats","abstract":"<p>Total number of seats for the driver&rsquo;s car.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)remainingSeats":{"name":"remainingSeats","abstract":"<p>Number of remaining seats currently in the trip.</p>","parent_name":"FIRTrip"},"Classes/FIRTrip.html#/c:objc(cs)FIRTrip(py)polyline":{"name":"polyline","abstract":"<p>A readonly property that determines which polyline to take in priority (Waze, then Google).</p>","parent_name":"FIRTrip"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)pedestrianDestinationId":{"name":"pedestrianDestinationId","abstract":"<p>Id of a pedestrian destination in backend database.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)createdOn":{"name":"createdOn","abstract":"<p>Timestamp for pedestrian destination creation.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)lastUpdatedOn":{"name":"lastUpdatedOn","abstract":"<p>Timestamp for last time pedestrian destination was updated.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)status":{"name":"status","abstract":"<p>Status of pedestrian destination</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)activeAfter":{"name":"activeAfter","abstract":"<p>A number (in minutes) of when this destination will be active.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)pedestrian":{"name":"pedestrian","abstract":"<p>Owner of the destination.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)address":{"name":"address","abstract":"<p>Location of the pedestrian destination.</p>","parent_name":"FIRPedestrianDestination"},"Classes/FIRPedestrianDestination.html#/c:objc(cs)FIRPedestrianDestination(py)pickupCoordinate":{"name":"pickupCoordinate","abstract":"<p>A geo-coordinate point specifying where the driver should pick the pedestrian from</p>","parent_name":"FIRPedestrianDestination"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(py)isLoggedIn":{"name":"isLoggedIn","abstract":"<p>A readonly property specifying if a user is linked to shared interactor. This doesn&rsquo;t require that an authentication token is present.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(py)isAuthenticated":{"name":"isAuthenticated","abstract":"<p>A readonly property specifying if an authentication token is present. This means direct API calls to server can take place.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(py)isProfileLoaded":{"name":"isProfileLoaded","abstract":"<p>A readonly property specifying if user profile is loaded from server. This property could be used at application initialization.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(py)user":{"name":"user","abstract":"<p>A readonly property returning currently logged in user.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>A singleton implementation.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Adds an observer to user interactor. If this observer is already subscribed, nothing happens.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Removes an observer to user interactor. If this observer doesn&rsquo;t exist, nothing happens.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)signupOuiHopUser:successHandler:errorHandler:":{"name":"-signupOuiHopUser:successHandler:errorHandler:","abstract":"<p>Signs up a new user as a OuiHop user with full features.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)signupThirdPartyUser:successHandler:errorHandler:":{"name":"-signupThirdPartyUser:successHandler:errorHandler:","abstract":"<p>Signs up a new user as a third party user with limited features.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)updateThirdPartyUser:successHandler:errorHandler:":{"name":"-updateThirdPartyUser:successHandler:errorHandler:","abstract":"<p>Updates a third party user object.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)updateOuiHopUser:successHandler:errorHandler:":{"name":"-updateOuiHopUser:successHandler:errorHandler:","abstract":"<p>Updates a OuiHop user object.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)changeUserMode:onSuccess:onError:":{"name":"-changeUserMode:onSuccess:onError:","abstract":"<p>Changes user mode to either pedestrian or driver.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)changeUserPassword:oldPassword:onSuccess:onError:":{"name":"-changeUserPassword:oldPassword:onSuccess:onError:","abstract":"<p>Changes user password. An authentication token is returned for the new credentials.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)updateUserPicture:onProgress:onSuccess:onError:":{"name":"-updateUserPicture:onProgress:onSuccess:onError:","abstract":"<p>Updates user photo.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)loginWithOuiHopEmail:password:":{"name":"-loginWithOuiHopEmail:password:","abstract":"<p>Logs in a OuiHop user with an email and password.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)loginWithExternalId:accessToken:":{"name":"-loginWithExternalId:accessToken:","abstract":"<p>Logs in a OuiHop user with and Id from an external entity (currently supports Facebook only).</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)loginWithMobileNumber:password:":{"name":"-loginWithMobileNumber:password:","abstract":"<p>Logs in a third party user with mobile number and password.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)silentLogin":{"name":"-silentLogin","abstract":"<p>Logs user silently, retrieving updated profile for cached user. This is best used at application initiation.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)logout":{"name":"-logout","abstract":"<p>Logs out current user and empties user cache.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)getLoggedInUserProfile":{"name":"-getLoggedInUserProfile","abstract":"<p>Retrieves user profile of currently authenticated user.</p>","parent_name":"UserInteractor"},"Classes/UserInteractor.html#/c:objc(cs)UserInteractor(im)getUserInfoForUserId:":{"name":"-getUserInfoForUserId:","abstract":"<p>Retrieves user information for a certain user.</p>","parent_name":"UserInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(py)surroundingUsers":{"name":"surroundingUsers","abstract":"<p>An array that holds currently surrounding users.</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)initWithInterval:":{"name":"-initWithInterval:","abstract":"<p>Initialization method with an interval</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)initWithAccuracy:":{"name":"-initWithAccuracy:","abstract":"<p>Initialization method with an accuracy</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)initWithInterval:accuracy:":{"name":"-initWithInterval:accuracy:","abstract":"<p>Initialization method with both an interval and an accuracy</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)startListeningToSurroundingUsers:":{"name":"-startListeningToSurroundingUsers:","abstract":"<p>Attaches an observer to the list of interactor observers. If this is the first observer, interactor starts listening for surrounding users periodically. If an observer is already attached to the interactor, only the new observer is attached.</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)stopListeningToSurroundingUsers:":{"name":"-stopListeningToSurroundingUsers:","abstract":"<p>Detaches an observer from the list of interactor observers. If this is the last observer, interactor stops listening for surrounding users. If other observers are still attached to the interactor, only the passed observer is detached.</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingUsersInteractor.html#/c:objc(cs)SurroundingUsersInteractor(im)firUserForUserId:":{"name":"-firUserForUserId:","abstract":"<p>Retrieves a specific FIRUser using its user Id.</p>","parent_name":"SurroundingUsersInteractor"},"Classes/SurroundingTripsInteractor.html#/c:objc(cs)SurroundingTripsInteractor(py)allTrips":{"name":"allTrips","abstract":"<p>An array of all trips in the current city. This is used later for filtration.</p>","parent_name":"SurroundingTripsInteractor"},"Classes/SurroundingTripsInteractor.html#/c:objc(cs)SurroundingTripsInteractor(py)surroundingTrips":{"name":"surroundingTrips","abstract":"<p>An array of filtered trips depending on location and other business filters (ex: Pedestrian Destination)</p>","parent_name":"SurroundingTripsInteractor"},"Classes/SurroundingTripsInteractor.html#/c:objc(cs)SurroundingTripsInteractor(im)initWithSurroundingUsersInteractor:pedestrianDestinationInteractor:":{"name":"-initWithSurroundingUsersInteractor:pedestrianDestinationInteractor:","abstract":"<p>An initialization method that is responsible for configuring surrounding trips interactor.</p>","parent_name":"SurroundingTripsInteractor"},"Classes/SurroundingTripsInteractor.html#/c:objc(cs)SurroundingTripsInteractor(im)startListeningToTrips:":{"name":"-startListeningToTrips:","abstract":"<p>Attaches an observer to the list of interactor observers. If this is the first observer, interactor starts listening for surrounding trips in real-time manner. If an observer is already attached to the interactor, only the new observer is attached.</p>","parent_name":"SurroundingTripsInteractor"},"Classes/SurroundingTripsInteractor.html#/c:objc(cs)SurroundingTripsInteractor(im)stopListeningToTrips:":{"name":"-stopListeningToTrips:","abstract":"<p>Detaches an observer from the list of interactor observers. If this is the last observer, interactor stops listening for surrounding trips real-time updates. If other observers are still attached to the interactor, the new observer is only attached.</p>","parent_name":"SurroundingTripsInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Attaches a new observer to pedestrian trip request interactor.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Detaches an observer from pedestrian trip request interactor.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)sendJoinRequest:seatsNumber:":{"name":"-sendJoinRequest:seatsNumber:","abstract":"<p>Sends a join request for a certain trip stating number of needed seats.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)sendJoinRequest:seatsNumber:pickupLocation:":{"name":"-sendJoinRequest:seatsNumber:pickupLocation:","abstract":"<p>Sends a join request for a certain trip stating number of needed seats and pickup location</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)cancelJoinRequestForced:":{"name":"-cancelJoinRequestForced:","abstract":"<p>Cancels a previously created join request for a trip.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)boardRequest":{"name":"-boardRequest","abstract":"<p>Moves the request to a BOARDED state, specifying that a pedestrian has successfully joined the driver in trip.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)dropOffRequest":{"name":"-dropOffRequest","abstract":"<p>Specifies that a pedestrian was dropped off the car for a boarded request.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianTripRequestInteractor.html#/c:objc(cs)PedestrianTripRequestInteractor(im)cancelWithDisputeAcceptedRequestForced:":{"name":"-cancelWithDisputeAcceptedRequestForced:","abstract":"<p>Cancels a previously accepted request for a trip. This method should be used when a driver incorrectly signals this request as BOARDED while a pedestrian isn&rsquo;t really boarded. A record is kept for this request that boarding was disputed by pedestrian.</p>","parent_name":"PedestrianTripRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(py)allPedestrianDestinations":{"name":"allPedestrianDestinations","abstract":"<p>All pedestrian destinations in the current city.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Attaches a new observer to pedestrian destination request interactor.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Detaches an observer from location interactor</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)getPedestrianDestinationForPedestrianDestinationId:onSuccess:onError:":{"name":"-getPedestrianDestinationForPedestrianDestinationId:onSuccess:onError:","abstract":"<p>Retrieves details of a certain pedestrian destination using its Id.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)startListeningToPedestrianDestinations:":{"name":"-startListeningToPedestrianDestinations:","abstract":"<p>Attaches an observer to the list of interactor observers. If this is the first observer, interactor starts listening for surrounding pedestrian destinations in real-time manner. If an observer is already attached to the interactor, only the new observer is attached.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)stopListeningToPedestrianDestinations:":{"name":"-stopListeningToPedestrianDestinations:","abstract":"<p>Detaches an observer from the list of interactor observers. If this is the last observer, interactor stops listening for surrounding pedestrian destinations real-time updates. If other observers are still attached to the interactor, the new observer is only attached.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationRequestInteractor.html#/c:objc(cs)PedestrianDestinationRequestInteractor(im)pedestrianDestinationForUserId:":{"name":"-pedestrianDestinationForUserId:","abstract":"<p>Retrieves a specific FIRPedestrianDestination using its pedestrian user Id.</p>","parent_name":"PedestrianDestinationRequestInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(py)currentPedestrianDestination":{"name":"currentPedestrianDestination","abstract":"<p>A variable that holds currently published pedestrian destination, or nil if nothing is published.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Attaches a new observer to pedestrian destination interactor.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Detaches an observer from pedestrian destination interactor.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(im)publishPedestrianDestinationWithCoordinate:address:zipcode:city:activeAfter:":{"name":"-publishPedestrianDestinationWithCoordinate:address:zipcode:city:activeAfter:","abstract":"<p>Publishes a new pedestrian destination to drivers.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(im)publishPedestrianDestinationWithCoordinate:address:zipcode:city:numberOfSeats:pickupCoordinate:activeAfter:":{"name":"-publishPedestrianDestinationWithCoordinate:address:zipcode:city:numberOfSeats:pickupCoordinate:activeAfter:","abstract":"<p>Publishes a new pedestrian destination to drivers.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PedestrianDestinationInteractor.html#/c:objc(cs)PedestrianDestinationInteractor(im)cancelCurrentPedestrianDestination":{"name":"-cancelCurrentPedestrianDestination","abstract":"<p>Cancels current pedestrian destination if there&rsquo;s a published one.</p>","parent_name":"PedestrianDestinationInteractor"},"Classes/PartnerLocationInteractor.html#/c:objc(cs)PartnerLocationInteractor(py)partnerId":{"name":"partnerId","abstract":"<p>The user Id having their location tracked.</p>","parent_name":"PartnerLocationInteractor"},"Classes/PartnerLocationInteractor.html#/c:objc(cs)PartnerLocationInteractor(py)currentPartnerLocation":{"name":"currentPartnerLocation","abstract":"<p>CLLocation represntation of the user location.</p>","parent_name":"PartnerLocationInteractor"},"Classes/PartnerLocationInteractor.html#/c:objc(cs)PartnerLocationInteractor(im)initWithPartnerId:":{"name":"-initWithPartnerId:","abstract":"<p>Initialization with a partner Id.</p>","parent_name":"PartnerLocationInteractor"},"Classes/PartnerLocationInteractor.html#/c:objc(cs)PartnerLocationInteractor(im)startMonitoringPartnerLocation:":{"name":"-startMonitoringPartnerLocation:","abstract":"<p>Attaches an observer to the list of interactor observers. If this is the first observer, interactor starts listening for partner location changes in real time. If an observer is already attached to the interactor, only the new observer is attached.</p>","parent_name":"PartnerLocationInteractor"},"Classes/PartnerLocationInteractor.html#/c:objc(cs)PartnerLocationInteractor(im)stopMonitoringPartnerLocation:":{"name":"-stopMonitoringPartnerLocation:","abstract":"<p>Detaches an observer from the list of interactor observers. If this is the last observer, interactor stops listening for partner location changes. If other observers are still attached to the interactor, only the passed observer is detached.</p>","parent_name":"PartnerLocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(py)currentLocation":{"name":"currentLocation","abstract":"<p>Last known location for user. If location was never acquired before, this attribute will be nil.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(py)drivingModeEnabled":{"name":"drivingModeEnabled","abstract":"<p>A property that defines if location manager acquires location in background or not.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(py)isLocationServiceActive":{"name":"isLocationServiceActive","abstract":"<p>A readonly property specifying if location service permissions are correct, and location service is turned on from device settings.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>A singleton pattern for location interactor.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Attaches a new observer to location interactor.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Detaches an observer from location interactor</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(im)startMonitoringLocation":{"name":"-startMonitoringLocation","abstract":"<p>Starts monitoring device location and notifying observers. If no location permission wasn&rsquo;t granted yet, this happens here.</p>","parent_name":"LocationInteractor"},"Classes/LocationInteractor.html#/c:objc(cs)LocationInteractor(im)stopMonitoringLocation":{"name":"-stopMonitoringLocation","abstract":"<p>Stops monitoring device location. No further events will be forwarded to observers, unless <q>startMonitoringLocation</q> is called back again.</p>","parent_name":"LocationInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)initWithDriverTripInteractor:":{"name":"-initWithDriverTripInteractor:","abstract":"<p>An initialization method that takes a driver trip interactor as a parameter.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)initWithDriverTripInteractor:unfinishedRequests:":{"name":"-initWithDriverTripInteractor:unfinishedRequests:","abstract":"<p>An initialization method that can be used to restore the state of in progress requests.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)startListeningToRequests:":{"name":"-startListeningToRequests:","abstract":"<p>Attaches an observer to the list of interactor observers. If this is the first observer, interactor starts listening for trip requests in a real-time manner. If an observer is already attached to the interactor, only the new observer is attached.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)stopListeningToRequests:":{"name":"-stopListeningToRequests:","abstract":"<p>Detaches an observer from the list of interactor observers. If this is the last observer, interactor stops listening for trip requests real-time updates. If other observers are still attached to the interactor, the new observer is only attached.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getActiveRequestWithRequestId:":{"name":"-getActiveRequestWithRequestId:","abstract":"<p>Retrieves a certain active request using its Id.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getActiveRequests":{"name":"-getActiveRequests","abstract":"<p>Retrieves all active requests for current driver trip.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getBoardedRequestWithRequestId:":{"name":"-getBoardedRequestWithRequestId:","abstract":"<p>Retrieves a certain boarded request using its Id.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getBoardedRequests":{"name":"-getBoardedRequests","abstract":"<p>Retrieves all boarded requests for current driver trip.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getFinishedRequestWithRequestId:":{"name":"-getFinishedRequestWithRequestId:","abstract":"<p>Retrieves a certain finished request using its Id.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)getFinishedRequests":{"name":"-getFinishedRequests","abstract":"<p>Retrieves all finished requests for current driver trip. A request is considered finished if it&rsquo;s in ARRIVED state.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)acceptRequest:":{"name":"-acceptRequest:","abstract":"<p>Accepts a request by pedestrian to join current trip.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)rejectRequest:":{"name":"-rejectRequest:","abstract":"<p>Rejects a request by pedestrian to join current trip.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)cancelRequest:":{"name":"-cancelRequest:","abstract":"<p>Cancels a request that was accepted before by driver.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)boardRequest:":{"name":"-boardRequest:","abstract":"<p>Signals that a pedestrian has boarded in car for an accepted request.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)dropOffRequest:":{"name":"-dropOffRequest:","abstract":"<p>Signals that a pedestrian was dropped off the car for a boarded request.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripRequestsInteractor.html#/c:objc(cs)DriverTripRequestsInteractor(im)cancelRequestWithDispute:":{"name":"-cancelRequestWithDispute:","abstract":"<p>Cancel a request that was boarded by a pedestrian although it&rsquo;s not the case in reality. Cancelling with dispute will keep a record that driver refused pedestrian&rsquo;s claim about boarding.</p>","parent_name":"DriverTripRequestsInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(py)shouldEnableWazeIntegration":{"name":"shouldEnableWazeIntegration","abstract":"<p>When set to YES, Waze SDK is enabled during trips. This should be enabled before starting a trip.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)addObserver:":{"name":"-addObserver:","abstract":"<p>Attaches a new observer to driver trip interactor.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)removeObserver:":{"name":"-removeObserver:","abstract":"<p>Detaches an observer from driver trip interactor.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)waypoints":{"name":"-waypoints","abstract":"<p>Gets a list of geo waypoints that the trip passes through.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)setWaypoints:":{"name":"-setWaypoints:","abstract":"<p>Defines waypoints for the trip to pass through. By default, trip route gets recalculated for an updated path.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)setWaypoints:shouldRecalculateTripRoute:":{"name":"-setWaypoints:shouldRecalculateTripRoute:","abstract":"<p>Defines waypoints for the trip to pass through.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)addWaypoint:":{"name":"-addWaypoint:","abstract":"<p>Adds a waypoint for current trip to pass through. New waypoint is added just before destination.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)addWaypointCoordinate:tag:":{"name":"-addWaypointCoordinate:tag:","abstract":"<p>Adds a waypoint for current trip to pass through. New waypoint is added just before destination.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)updateWaypointCoordinate:withTag:":{"name":"-updateWaypointCoordinate:withTag:","abstract":"<p>Updates a certain waypoint using its tag.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)removeWayPointWithTag:":{"name":"-removeWayPointWithTag:","abstract":"<p>Removes all waypoints with the provided tag.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)startTripWithAddress:pedestrianDestinationId:activeAfter:":{"name":"-startTripWithAddress:pedestrianDestinationId:activeAfter:","abstract":"<p>Starts a new trip for driver.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)cancelTripRouteCalculation":{"name":"-cancelTripRouteCalculation","abstract":"<p>Cancels trip route directions calculation if it&rsquo;s already in progress.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)cancelTrip":{"name":"-cancelTrip","abstract":"<p>Cancels current active trip.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)endTrip":{"name":"-endTrip","abstract":"<p>Ends trip after arrival. This method is called automatically when driver location becomes near destination.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)activeTrip":{"name":"-activeTrip","abstract":"<p>Retrieves current active trip.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)currentTripDistance":{"name":"-currentTripDistance","abstract":"<p>Gets current trip distance. This value increments as driver keeps moving.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)currentTripDuration":{"name":"-currentTripDuration","abstract":"<p>Gets current trip duration. This value increments as trip stays active.</p>","parent_name":"DriverTripInteractor"},"Classes/DriverTripInteractor.html#/c:objc(cs)DriverTripInteractor(im)openNavigationInWazeApp":{"name":"-openNavigationInWazeApp","abstract":"<p>Opens navigation for the current trip destination in Waze app.</p>","parent_name":"DriverTripInteractor"},"Classes/WaypointWrapper.html#/c:objc(cs)WaypointWrapper(py)coordinate":{"name":"coordinate","abstract":"<p>A geo coordinate point.</p>","parent_name":"WaypointWrapper"},"Classes/WaypointWrapper.html#/c:objc(cs)WaypointWrapper(py)tag":{"name":"tag","abstract":"<p>A string tag to identify the coordinate.</p>","parent_name":"WaypointWrapper"},"Classes/WaypointWrapper.html#/c:objc(cs)WaypointWrapper(cm)waypointWrapperWithCoordinate:tag:":{"name":"+waypointWrapperWithCoordinate:tag:","abstract":"<p>A static initializer that creates an object using a geo coordinate and tag.</p>","parent_name":"WaypointWrapper"},"Classes/WaypointWrapper.html":{"name":"WaypointWrapper","abstract":"<p>A wrapper class for a geo coordinate that holds a tag for it as well.</p>"},"Classes/DriverTripInteractor.html":{"name":"DriverTripInteractor","abstract":"<p>A class that is responsible for trip creation and modification for a driver.</p>"},"Classes/DriverTripRequestsInteractor.html":{"name":"DriverTripRequestsInteractor","abstract":"<p>A class responsible for monitoring all requests being made to a driver&rsquo;s current trip.</p>"},"Classes/LocationInteractor.html":{"name":"LocationInteractor","abstract":"<p>A singleton interactor that is responsible for acquiring device location. It&rsquo;s also responsible for all location-based tasks, such as updating backend with user location, zipcode, and city.</p>"},"Classes/PartnerLocationInteractor.html":{"name":"PartnerLocationInteractor","abstract":"<p>A class responsible for monitoring real-time location of a certain user, typically a driver or a pedestrian involved in a trip request scenario.</p>"},"Classes/PedestrianDestinationInteractor.html":{"name":"PedestrianDestinationInteractor","abstract":"<p>An interactor responsible for publishing pedestrian destinations</p>"},"Classes/PedestrianDestinationRequestInteractor.html":{"name":"PedestrianDestinationRequestInteractor","abstract":"<p>An interactor that is used by driver SDK to manage pedestrian destinations.</p>"},"Classes/PedestrianTripRequestInteractor.html":{"name":"PedestrianTripRequestInteractor","abstract":"<p>A class responsible for handling join trip requests for pedestrian side.</p>"},"Classes.html#/c:objc(cs)SendLocationInteractor":{"name":"SendLocationInteractor","abstract":"<p>A class that automatically listens to location changes, and sends them to server.</p>"},"Classes/SurroundingTripsInteractor.html":{"name":"SurroundingTripsInteractor","abstract":"<p>An interactor responsible for retrieving surrounding trips that match needed criteria, depending on current state.</p>"},"Classes/SurroundingUsersInteractor.html":{"name":"SurroundingUsersInteractor","abstract":"<p>This class is responsible for retrieving surrounding users every certain interval. Users are retrieved using in internal GeoHash algorithm to make retrieval fast enough.</p>"},"Classes/UserInteractor.html":{"name":"UserInteractor","abstract":"<p>An interactor responsible for managing user login, caching, loading profile, and logout. It&rsquo;s also responsible for retrieving information about other users of interest.</p>"},"Classes/FIRPedestrianDestination.html":{"name":"FIRPedestrianDestination","abstract":"<p>A class representing a pedestrian destination.</p>"},"Classes/FIRTrip.html":{"name":"FIRTrip","abstract":"<p>A proxy version of a Trip object that contains necessary information stored in Firestore to track real-time updates.</p>"},"Classes/FIRTripRequest.html":{"name":"FIRTripRequest","abstract":"<p>A class representing a request from a pedestrian to join a driver&rsquo;s trip.</p>"},"Classes/FIRUser.html":{"name":"FIRUser","abstract":"<p>A proxy version of a User object that contains necessary information stored in Firestore to track real-time updates.</p>"},"Classes/OUIAddress.html":{"name":"OUIAddress","abstract":"<p>A class representing full information of a certain address.</p>"},"Classes/BaseModel.html":{"name":"BaseModel","abstract":"<p>A base class for main base models.</p>"},"Classes.html#/c:objc(cs)GoogleNumberWithText":{"name":"GoogleNumberWithText","abstract":"<p>All models returned by the GoogleService API"},"Classes/TripRequest.html":{"name":"TripRequest","abstract":"<p>A class representing a request from a pedestrian to join a driver&rsquo;s trip.</p>"},"Classes/User.html":{"name":"User","abstract":"<p>An object representing registered users. This could either be a OuiHop or third party user.</p>"},"Classes/UserCar.html":{"name":"UserCar","abstract":"<p>A class representing a driver&rsquo;s car.</p>"},"Classes/OuiHopSDKConfiguration.html":{"name":"OuiHopSDKConfiguration","abstract":"<p>A class responsible for configuring SDK.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}